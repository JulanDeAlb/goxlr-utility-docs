"use strict";(self.webpackChunkgoxlr_utiltiy_docs=self.webpackChunkgoxlr_utiltiy_docs||[]).push([[703],{4137:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(n),m=o,y=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(y,a(a({ref:t},c),{},{components:n})):r.createElement(y,a({ref:t},c))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:o,a[1]=p;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7265:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var r=n(7462),o=(n(7294),n(4137));const i={id:"simple-http",title:"Simple HTTP Request",sidebar_position:3},a="Simple HTTP Request",p={unversionedId:"development/api/simple-http",id:"development/api/simple-http",title:"Simple HTTP Request",description:"Once you have the web server details (or assumed the defaults), you can use HTTP to Send commands to the daemon.",source:"@site/docs/development/api/simple-http.md",sourceDirName:"development/api",slug:"/development/api/simple-http",permalink:"/goxlr-utility-docs/docs/development/api/simple-http",draft:!1,editUrl:"https://goxlr-on-linux.github.io/goxlr-utility-docs/docs/development/api/simple-http.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"simple-http",title:"Simple HTTP Request",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Unix Socket/Named Pipe",permalink:"/goxlr-utility-docs/docs/development/api/unix-named"},next:{title:"Websocket Request",permalink:"/goxlr-utility-docs/docs/development/api/websocket"}},l={},s=[],c={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"simple-http-request"},"Simple HTTP Request"),(0,o.kt)("p",null,"Once you have the web server details (or assumed the defaults), you can use HTTP to Send commands to the daemon.\nThese are incredibly simple, send a ",(0,o.kt)("inlineCode",{parentName:"p"},"POST")," request with ",(0,o.kt)("inlineCode",{parentName:"p"},"Content-Type: application/json")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"/api/command"),",\nwith the request in the body and you'll receive a JSON response. (more on messaging later)."),(0,o.kt)("p",null,"So for example, to fetch the Daemon Status, you'd simply send a ",(0,o.kt)("inlineCode",{parentName:"p"},'"GetStatus"')," message to the endpoint,\nand will receive the ",(0,o.kt)("inlineCode",{parentName:"p"},'"Status" {..}')," response."))}d.isMDXComponent=!0}}]);